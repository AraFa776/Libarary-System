@model BookShoppingCartMvcUI.Models.IndexVm
@{
    Layout = "_Layout";
}
<div class="container mt-5 mb-5">
    <form action="/Home/BookSearch" method="get" class="search-container">
        <div class="input-group input-group-lg shadow-lg rounded-pill overflow-hidden">
            <!-- Search Icon -->
            <span class="input-group-text bg-white border-end-0">
                <i class="bi bi-search text-primary"></i>
            </span>

            <!-- Search Input -->
            <input type="text" name="xname" id="xname"
                   class="form-control border-start-0 ps-1"
                   placeholder="Search books..."
                   aria-label="Search books">

            <!-- Submit Button -->
            <button type="submit"
                    class="btn btn-primary rounded-end-pill px-4 d-flex align-items-center gap-2">
                <span>Search</span>
                <i class="bi bi-arrow-right-circle-fill"></i>
            </button>
        </div>
    </form>
</div>


<section id="portfolio" class="portfolio section">

    <!-- Section Title -->
    <div class="container section-title" data-aos="fade-up">
        <h2>Sections</h2>
        <p>
            We are at your service and offer you the best products wherever you are, with the possibility of home delivery.
        </p>
    </div><!-- End Section Title -->

    <div class="container">

        <div class="isotope-layout books-section p-5" data-default-filter="*" data-layout="masonry" data-sort="original-order">

            <ul class="portfolio-filters isotope-filters" data-aos="fade-up" data-aos-delay="100">
                <li data-filter="*" class="filter-active">All</li>
                @foreach (var Item in Model.Categories)
                {
                    <li data-filter=".category-@Item.Id">@Item.GenreName</li>
                }
            </ul>

            <div class="row gy-4 isotope-grid" data-aos="fade-up" data-aos-delay="200">
                @foreach (var item in Model.Books)
                {
                    <div class="col-lg-4 portfolio-item @(item.Genre != null ? "category-" + item.Genre.Id : "")">
                        <div class="card h-100 border-0 shadow-md hover-lift" style="border-radius: var(--bs-border-radius-lg);">
                            <div class="position-relative">
                                <img style="height: 350px; object-fit: cover; cursor:pointer;"
                                     src="@(string.IsNullOrEmpty(item.Image) ? "/images/NoImage.png" : item.Image)"
                                     class="card-img-top"
                                     alt="..."
                                     data-bs-toggle="modal"
                                     data-bs-target="#descriptionModal"
                                     onclick='setModalContent(
                                                @Html.Raw(Json.Serialize(item.BookName)),
                                                @Html.Raw(Json.Serialize(item.AuthorName)),
                                                @Html.Raw(Json.Serialize(item.Description ?? "No description available"))
                                            )' />
                            </div>
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title text-truncate" title="@item.BookName">
                                    @item.BookName
                                </h5>
                                <div class="mb-3">
                                    <p class="card-text mb-1">
                                        <small class="text-muted">Author:</small> @item.AuthorName
                                    </p>
                                    @if (item.Genre != null)
                                    {
                                        <p class="card-text mb-1">
                                            <small class="text-muted">Genre:</small> @item.Genre.GenreName
                                        </p>
                                    }
                                    else
                                    {
                                        <p class="card-text mb-1">
                                            <small class="text-muted">Genre:</small> Unknown
                                        </p>
                                    }
                                    <h6 class="text-primary fw-bold mt-2">
                                        <small class="text-muted ">Price:</small> @item.Price.ToString("C")
                                    </h6>
                                </div>
                                <div class="mt-auto">
                                    @if (item.Quantity > 0)
                                    {
                                        <button type="button"
                                                onclick="addToCart(@item.Id)"
                                                class="btn btn-primary w-100 d-flex align-items-center justify-content-center gap-2 shadow-lg">
                                            <i class="bi bi-cart-plus"></i>
                                            <span>Add to Cart</span>
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-outline-danger w-100" disabled>
                                            <i class="bi bi-cart-dash"></i> Not Available
                                        </button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="modal fade" id="descriptionModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-scrollable">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="modalTitle">Book Details</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <p><strong>Author:</strong> <span id="modalAuthor"></span></p>
                                <p><strong>Description:</strong></p>
                                <p id="modalDescription"></p>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>

</section>




<section id="contact-us" class="contact section">

    <!-- Section Title -->
    <div class="container section-title text-center" data-aos="fade-up">
        <h2>Contact</h2>
    </div><!-- End Section Title -->

    <div class="container" data-aos="fade-up" data-aos-delay="100">

        <div class="row gy-4 justify-content-center">

            <div class="col-lg-12">

                <div class="row gy-4">
                    <div class="col-md-3">
                        <div class="info-item" data-aos="fade" data-aos-delay="200">
                            <a href="https://maps.app.goo.gl/RvhBcwEmGFfKKi4cA" target="_blank">
                                <i class="bi bi-geo-alt"></i>
                                <h3>Address</h3>
                            </a>
                        </div>
                    </div><!-- End Info Item -->

                    <div class="col-md-3">
                        <div class="info-item" data-aos="fade" data-aos-delay="300">
                            <a href="https://wa.me/201012263917" target="_blank">
                                <i class="bi bi-telephone"></i>
                                <h3>Call Us</h3>
                            </a>
                        </div>
                    </div><!-- End Info Item -->

                    <div class="col-md-3">
                        <div class="info-item" data-aos="fade" data-aos-delay="400">
                            <a href="mailto:" mailto:hubb4781@gmail.com">
                                <i class="bi bi-envelope"></i>
                                <h3>Email Us</h3>
                            </a>
                        </div>
                    </div><!-- End Info Item -->
                    <div class="col-md-3">
                        <div class="info-item" data-aos="fade" data-aos-delay="400">
                            <a href="https://www.facebook.com/profile.php?id=61575403166958" target="_blank">
                                <i class="bi bi-facebook fill"></i>
                                <h3>Facebook</h3>
                            </a>
                        </div>
                    </div><!-- End Info Item -->

                </div>

            </div>

        </div>

    </div>

</section>
@section Scripts {
    <script>
         function setModalContent(title, author, description) {
            console.log("Title:", title);
            console.log("Author:", author);
            console.log("Description:", description);
            document.getElementById('modalTitle').innerText = title;
            document.getElementById('modalAuthor').innerText = author;
            document.getElementById('modalDescription').innerText = description;
        }
            document.addEventListener("DOMContentLoaded", function () {
            let iso = new Isotope('.isotope-grid', {
                itemSelector: '.portfolio-item',
                layoutMode: 'masonry'
            });

            // Filter items on button click
            document.querySelectorAll('.portfolio-filters li').forEach(function (el) {
                el.addEventListener('click', function () {
                    let filterValue = el.getAttribute('data-filter');
                    iso.arrange({ filter: filterValue });
                    document.querySelectorAll('.portfolio-filters li').forEach(f => f.classList.remove('filter-active'));
                    el.classList.add('filter-active');
                });
            });
        });
        function addToCart(bookId) {
            fetch(`/Cart/AddItem?bookId=${bookId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {

                    // Update cart count safely
                    const cartCount = document.getElementById("cartCount");
                    if (cartCount) {
                        cartCount.textContent = data;
                    }

                    // Show success toast
                    const toastLive = document.getElementById('cartToast');
                    if (toastLive) {
                        const toast = new bootstrap.Toast(toastLive);
                        toast.show();
                    }
                })
                .catch(error => {
                    window.location.href = "/Identity/Account/Login";
                });
        }
    </script>
}

